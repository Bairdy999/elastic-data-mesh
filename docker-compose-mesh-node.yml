networks:
 default:
   name: data-mesh-network
   external: true

services:
 setup${instance}:
   image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
   container_name: cluster${instance}-setup
   volumes:
     - /mnt/data/mesh/cluster${instance}/certs:/usr/share/elasticsearch/config/certs
   user: "0"
   command: >
     bash -c '
       if [ x${ELASTIC_PASSWORD} == x ]; then
         echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
         exit 1;
       elif [ x${KIBANA_PASSWORD} == x ]; then
         echo "Set the KIBANA_PASSWORD environment variable in the .env file";
         exit 1;
       fi;
       echo "Waiting for Elasticsearch availability";
       until curl -s --cacert config/certs/ca/ca.crt https://cluster${instance}-elastic:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
       echo "Setting kibana_system password";
       until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://cluster${instance}-elastic:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
       echo "All done!";
     '
   healthcheck:
     test: ["CMD-SHELL", "[ -f config/certs/cluster${instance}-elastic/cluster${instance}-elastic.crt ]"]
     interval: 1s
     timeout: 5s
     retries: 20

 cluster${instance}-elastic:
   depends_on:
     setup${instance}:
       condition: service_healthy
   image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
   container_name: cluster${instance}-elastic
   labels:
     co.elastic.logs/module: elasticsearch
   user: "110"
   volumes:
     - /mnt/data/mesh/cluster${instance}/certs:/usr/share/elasticsearch/config/certs
     - /mnt/data/mesh/cluster${instance}/elastic:/usr/share/elasticsearch/data
     - /mnt/data/mesh/cluster${instance}/elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
   ports:
     - 92${instance}:9200
     - 93${instance}:9300
     - 94${instance}:9443
   environment:
     - node.name=cluster${instance}-elastic
     - cluster.name=mesh-cluster-${instance}
     - discovery.type=single-node
     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
     - bootstrap.memory_lock=true
     - xpack.security.enabled=true
     - xpack.security.http.ssl.enabled=true
     - xpack.security.http.ssl.key=certs/cluster${instance}-elastic/cluster${instance}-elastic.key
     - xpack.security.http.ssl.certificate=certs/cluster${instance}-elastic/cluster${instance}-elastic.crt
     - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
     - xpack.security.remote_cluster_server.ssl.enabled=true
     - xpack.security.remote_cluster_server.ssl.key=certs/cluster${instance}-elastic/cluster${instance}-elastic.key
     - xpack.security.remote_cluster_server.ssl.certificate=certs/cluster${instance}-elastic/cluster${instance}-elastic.crt
     - xpack.security.remote_cluster_server.ssl.verification_mode=certificate
     - xpack.security.transport.ssl.enabled=true
     - xpack.security.transport.ssl.key=certs/cluster${instance}-elastic/cluster${instance}-elastic.key
     - xpack.security.transport.ssl.certificate=certs/cluster${instance}-elastic/cluster${instance}-elastic.crt
     - xpack.security.transport.ssl.verification_mode=certificate
     - xpack.license.self_generated.type=trial
     - http.port=9200
     - transport.host="0.0.0.0"
     - transport.port=9300
     - remote_cluster.host="0.0.0.0"
     - remote_cluster.port=9443
   ulimits:
     memlock:
       soft: -1
       hard: -1
   mem_limit: ${ELASTIC_MEM_LIMIT}
   healthcheck:
     test:
       [
         "CMD-SHELL",
         "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
       ]
     interval: 10s
     timeout: 10s
     retries: 20

 kibana${instance}:
   depends_on:
     cluster${instance}-elastic:
       condition: service_healthy
   image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
   container_name: cluster${instance}-kibana
   labels:
     co.elastic.logs/module: kibana
   volumes:
     - /mnt/data/mesh/cluster${instance}/certs:/usr/share/kibana/config/certs
     - /mnt/data/mesh/cluster${instance}/kibana:/usr/share/kibana/data
     - /mnt/data/mesh/cluster${instance}/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
   user: "110"
   ports:
     - 56${instance}:5601
   environment:
     - SERVERNAME=kibana${instance}
     - ELASTICSEARCH_HOSTS=https://cluster${instance}-elastic:9200
     - ELASTICSEARCH_USERNAME=kibana_system
     - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
     - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
     - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
     - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
     - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
     - SERVER_PORT=5601
   mem_limit: ${KB_MEM_LIMIT}
   healthcheck:
     test:
       [
         "CMD-SHELL",
         "curl -s -I http://localhost:5601/cluster${instance} | grep -q 'HTTP/1.1 302 Found'",
       ]
     interval: 10s
     timeout: 10s
     retries: 20